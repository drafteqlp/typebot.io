// tsup.config.ts
import { solidPlugin } from "esbuild-plugin-solid";
import { defineConfig } from "tsup";

// package.json
var version = "0.3.55";

// tsup.config.ts
var tsup_config_default = defineConfig((options) => [
  {
    entry: ["src/index.ts"],
    minify: !options.watch,
    format: "esm",
    platform: "browser",
    dts: true
  },
  {
    entry: ["src/web.ts"],
    minify: !options.watch,
    format: "esm",
    platform: "browser",
    loader: {
      ".css": "text"
    },
    banner: {
      js: `// v${version}`
    },
    esbuildPlugins: [solidPlugin()]
  }
]);
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkM6XFxcXFVzZXJzXFxcXHN1cnlhXFxcXERvY3VtZW50c1xcXFxQcm9qZWN0c1xcXFxkcmFmdGVxXFxcXHR5cGVib3QuaW9cXFxccGFja2FnZXNcXFxcZW1iZWRzXFxcXGpzXFxcXHRzdXAuY29uZmlnLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkM6XFxcXFVzZXJzXFxcXHN1cnlhXFxcXERvY3VtZW50c1xcXFxQcm9qZWN0c1xcXFxkcmFmdGVxXFxcXHR5cGVib3QuaW9cXFxccGFja2FnZXNcXFxcZW1iZWRzXFxcXGpzXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9DOi9Vc2Vycy9zdXJ5YS9Eb2N1bWVudHMvUHJvamVjdHMvZHJhZnRlcS90eXBlYm90LmlvL3BhY2thZ2VzL2VtYmVkcy9qcy90c3VwLmNvbmZpZy50c1wiO2ltcG9ydCB7IHNvbGlkUGx1Z2luIH0gZnJvbSBcImVzYnVpbGQtcGx1Z2luLXNvbGlkXCI7XHJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ0c3VwXCI7XHJcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi9wYWNrYWdlLmpzb25cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZygob3B0aW9ucykgPT4gW1xyXG4gIHtcclxuICAgIGVudHJ5OiBbXCJzcmMvaW5kZXgudHNcIl0sXHJcbiAgICBtaW5pZnk6ICFvcHRpb25zLndhdGNoLFxyXG4gICAgZm9ybWF0OiBcImVzbVwiLFxyXG4gICAgcGxhdGZvcm06IFwiYnJvd3NlclwiLFxyXG4gICAgZHRzOiB0cnVlLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgZW50cnk6IFtcInNyYy93ZWIudHNcIl0sXHJcbiAgICBtaW5pZnk6ICFvcHRpb25zLndhdGNoLFxyXG4gICAgZm9ybWF0OiBcImVzbVwiLFxyXG4gICAgcGxhdGZvcm06IFwiYnJvd3NlclwiLFxyXG4gICAgbG9hZGVyOiB7XHJcbiAgICAgIFwiLmNzc1wiOiBcInRleHRcIixcclxuICAgIH0sXHJcbiAgICBiYW5uZXI6IHtcclxuICAgICAganM6IGAvLyB2JHt2ZXJzaW9ufWAsXHJcbiAgICB9LFxyXG4gICAgZXNidWlsZFBsdWdpbnM6IFtzb2xpZFBsdWdpbigpXSxcclxuICB9LFxyXG5dKTtcclxuIiwgIntcclxuICBcIm5hbWVcIjogXCJAdHlwZWJvdC5pby9qc1wiLFxyXG4gIFwidmVyc2lvblwiOiBcIjAuMy41NVwiLFxyXG4gIFwiZGVzY3JpcHRpb25cIjogXCJKYXZhc2NyaXB0IGxpYnJhcnkgdG8gZGlzcGxheSB0eXBlYm90cyBvbiB5b3VyIHdlYnNpdGVcIixcclxuICBcImxpY2Vuc2VcIjogXCJGU0wtMS4xLUFMdjJcIixcclxuICBcInR5cGVcIjogXCJtb2R1bGVcIixcclxuICBcIm1haW5cIjogXCIuL2Rpc3QvaW5kZXguanNcIixcclxuICBcInR5cGVzXCI6IFwiLi9kaXN0L2luZGV4LmQudHNcIixcclxuICBcImV4cG9ydHNcIjoge1xyXG4gICAgXCIuXCI6IFwiLi9kaXN0L2luZGV4LmpzXCIsXHJcbiAgICBcIi4vd2ViXCI6IFwiLi9kaXN0L3dlYi5qc1wiXHJcbiAgfSxcclxuICBcInNjcmlwdHNcIjoge1xyXG4gICAgXCJkZXZcIjogXCJ0c3VwIC0td2F0Y2hcIixcclxuICAgIFwiYnVpbGRcIjogXCJ0c3VwXCJcclxuICB9LFxyXG4gIFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcclxuICAgIFwiQGFpLXNkay91aS11dGlsc1wiOiBcIjEuMS44XCIsXHJcbiAgICBcIkBhcmstdWkvc29saWRcIjogXCI0LjIuMVwiLFxyXG4gICAgXCJAZml4LXdlYm0tZHVyYXRpb24vZml4XCI6IFwiMS4wLjFcIixcclxuICAgIFwiQHN0cmlwZS9zdHJpcGUtanNcIjogXCIxLjU0LjFcIixcclxuICAgIFwiY2xzeFwiOiBcIjIuMS4xXCIsXHJcbiAgICBcImRvbXB1cmlmeVwiOiBcIjMuMC42XCIsXHJcbiAgICBcImt5XCI6IFwiMS4yLjRcIixcclxuICAgIFwibWFya2VkXCI6IFwiOS4wLjNcIixcclxuICAgIFwicGFydHlzb2NrZXRcIjogXCIxLjAuMlwiLFxyXG4gICAgXCJzb2xpZC1lbGVtZW50XCI6IFwiMS45LjBcIixcclxuICAgIFwic29saWQtanNcIjogXCIxLjkuMlwiLFxyXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtYnViYmxlc1wiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL2Jsb2Nrcy1pbnB1dHNcIjogXCJ3b3Jrc3BhY2U6KlwiLFxyXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtbG9naWNcIjogXCJ3b3Jrc3BhY2U6KlwiLFxyXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtaW50ZWdyYXRpb25zXCI6IFwid29ya3NwYWNlOipcIixcclxuICAgIFwiQHR5cGVib3QuaW8vYm90LWVuZ2luZVwiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL2VudlwiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL2xpYlwiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL3JpY2gtdGV4dFwiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL3NldHRpbmdzXCI6IFwid29ya3NwYWNlOipcIixcclxuICAgIFwiQHR5cGVib3QuaW8vdWlcIjogXCJ3b3Jrc3BhY2U6KlwiLFxyXG4gICAgXCJAdHlwZWJvdC5pby90aGVtZVwiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL3RzY29uZmlnXCI6IFwid29ya3NwYWNlOipcIixcclxuICAgIFwiQHR5cGVib3QuaW8vemVuZGVzay1ibG9ja1wiOiBcIndvcmtzcGFjZToqXCIsXHJcbiAgICBcIkB0eXBlYm90LmlvL3NjaGVtYXNcIjogXCJ3b3Jrc3BhY2U6KlwiLFxyXG4gICAgXCJAdHlwZXMvZG9tcHVyaWZ5XCI6IFwiMy4wLjNcIixcclxuICAgIFwiYXV0b3ByZWZpeGVyXCI6IFwiMTAuNC4yMFwiLFxyXG4gICAgXCJlc2J1aWxkLXBsdWdpbi1zb2xpZFwiOiBcIl4wLjYuMFwiLFxyXG4gICAgXCJwb3N0Y3NzXCI6IFwiOC41LjFcIixcclxuICAgIFwidGFpbHdpbmRjc3NcIjogXCIzLjQuMTdcIixcclxuICAgIFwidHN1cFwiOiBcIjguMy4wXCJcclxuICB9LFxyXG4gIFwicHVibGlzaENvbmZpZ1wiOiB7XHJcbiAgICBcImFjY2Vzc1wiOiBcInB1YmxpY1wiXHJcbiAgfVxyXG59XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBdVgsU0FBUyxtQkFBbUI7QUFDblosU0FBUyxvQkFBb0I7OztBQ0MzQixjQUFXOzs7QURFYixJQUFPLHNCQUFRLGFBQWEsQ0FBQyxZQUFZO0FBQUEsRUFDdkM7QUFBQSxJQUNFLE9BQU8sQ0FBQyxjQUFjO0FBQUEsSUFDdEIsUUFBUSxDQUFDLFFBQVE7QUFBQSxJQUNqQixRQUFRO0FBQUEsSUFDUixVQUFVO0FBQUEsSUFDVixLQUFLO0FBQUEsRUFDUDtBQUFBLEVBQ0E7QUFBQSxJQUNFLE9BQU8sQ0FBQyxZQUFZO0FBQUEsSUFDcEIsUUFBUSxDQUFDLFFBQVE7QUFBQSxJQUNqQixRQUFRO0FBQUEsSUFDUixVQUFVO0FBQUEsSUFDVixRQUFRO0FBQUEsTUFDTixRQUFRO0FBQUEsSUFDVjtBQUFBLElBQ0EsUUFBUTtBQUFBLE1BQ04sSUFBSSxPQUFPLE9BQU87QUFBQSxJQUNwQjtBQUFBLElBQ0EsZ0JBQWdCLENBQUMsWUFBWSxDQUFDO0FBQUEsRUFDaEM7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
